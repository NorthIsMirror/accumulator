#
# Library file (*.laccu)
#
# Standard functions that can be used in plugins
#

# Available colors to embed in generated text
# ACC - accumulator color
ACC_RED=$'\7'
ACC_RED_E=$'\25'
ACC_GREEN=$'\3'
ACC_GREEN_E=$'\25'
ACC_YELLOW=$'\4'
ACC_YELLOW_E=$'\25'
ACC_MAGENTA=$'\5'
ACC_MAGENTA_E=$'\25'
ACC_CYAN=$'\6'
ACC_CYAN_E=$'\25'

# Resolves absolute path from current working directory and file path
#
# $1 - current working directory
#
# $2 - file path
#
# $reply[1] - dirname
#
# $reply[2] - basename
#
function zaccu_stdlib_resolve_path() {
    local dirpath="$1" filepath="$2"

    local dirpath2="${dirpath/#\~/$HOME}"
    dirpath2="${dirpath2:a}"
    local filepath2="${filepath/#\~/$HOME}"
    filepath2="${filepath2:a}"

    reply=()
    if [ "${filepath2[1]}" = "/" ]; then
        reply[1]="${filepath2:h}"
        reply[2]="${filepath2:t}"
    else
        local p="$dirpath2/$filepath2"
        reply[1]="${p:h}"
        reply[2]="${p:t}"
    fi
}

# Puts given text on command line â€“ regardless if Zle is active or not
#
# $1 - text to put on command line
#
function zaccu_stdlib_to_cmd_line() {
    if zle; then
        zle kill-buffer
        BUFFER="$1"
        zle redisplay
        zle beginning-of-line
    else
        print -zr "$1"
    fi
}

# Returns date and time
#
# $REPLY - date and time string "Y_m_d_H.M.S"
#
function zaccu_stdlib_get_date_and_time_string() {
    REPLY=$( date +%Y_%m_%d_%H.%M.%S )
}

# Decodes given hyperlink and returns data contained. Testable
# - test to check if hyperlink was correctly decoded
#
# $1 - hyperlink string
#
# $reply[1] - ID (of action)
# $reply[2] - time stamp
# $reply[3] - command
# $reply[4] - active path
# $reply[5] - file
#
function zaccu_stdlib_decode_hyperlink() {
    if [[ "$1" = (#b)*$'\1'([^$'\1']#)$'\1'([^$'\1']#)$'\1'([^$'\1']#)$'\1'([^$'\1']#)$'\1'([^$'\2']#)$'\2'* ]]; then
        local id="${match[1]}" ts="${match[2]}" cmd="${match[3]}" active_path="${match[4]}" file="${match[5]}"
        reply=()
        reply[1]="$id"
        reply[2]="$ts"
        reply[3]="$cmd"
        reply[4]="$active_path"
        reply[5]="$file"
        return 0;
    fi

    return 1
}

# vim:ft=zsh
